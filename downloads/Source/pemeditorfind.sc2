*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="pemeditorfind.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "editpropertydialogenglish.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmpemeditorfind AS baseform OF "peme_basecontrols.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdSearch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntClass.lblClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntClass.cboClassLookFor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntClass.chkExactMatch1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntClass.lblBaseClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntClass.cboBaseClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.lblLookFor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.cboLookFor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.lblScope" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.cboScope" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.cboFolder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.lblLookIn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.cmdGetFolder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.chkSubFolders" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.chkProjectHomeDir" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.cmdCurrent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSearch.chkExactMatch2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.lblFileTypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.cmdMarkAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.cmdClearAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntTypes.Chkfiletype14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colClass.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colClass.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colFileName.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colFileName.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colFolder.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colFolder.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colParentClass.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colParentClass.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colClassLoc.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colClassLoc.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colBaseClass.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.colBaseClass.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.ColTimeStamp.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResults.ColTimeStamp.Text1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addfiletype
		*m: aligncontainers
		*m: checkfiletype
		*m: editsourcefile
		*m: loadscope
		*m: search
		*m: setallfiletypes
		*m: updatelookfor
		*m: updatescope
		*p: cbobaseclass
		*p: cboclasslookfor
		*p: cbofolder
		*p: cbolookfor
		*p: cboscope
		*p: cfiletypes
		*p: chkprojecthomedir
		*p: chksubfolders
		*p: chomedir
		*p: csearchtype
		*p: lclassexactmatch
		*p: lfilenameexactmatch
		*p: lrequeryscope
		*p: ofoxref
		*p: oresultsform
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	BindControls = .F.
	Caption = "PEM Editor - Open"
	cbobaseclass = .NULL.
	cboclasslookfor = .NULL.
	cbofolder = .NULL.
	cbolookfor = .NULL.
	cboscope = .NULL.
	cfiletypes = |
	chkprojecthomedir = .NULL.
	chksubfolders = .NULL.
	chomedir = 
	csearchtype = 
	DataSession = 2
	Desktop = .T.
	DoCreate = .T.
	Height = 292
	HelpContextID = 1231101
	lclassexactmatch = .F.
	lfilenameexactmatch = .F.
	lrequeryscope = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmPEMEditorFind"
	ofoxref = .NULL.
	oresultsform = .NULL.
	ShowTips = .T.
	Width = 429
	_memberdata = <VFPData>
		<memberdata name="chomedir" display="cHomeDir"/>
		</VFPData>		&& XML Metadata for customizable properties
	changefontsize.Left = -24
	changefontsize.Name = "changefontsize"
	changefontsize.Top = 114

	ADD OBJECT 'cmdCancel' AS basecommandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		Height = 23, ;
		Left = 359, ;
		Name = "cmdCancel", ;
		nanchor = 8, ;
		TabIndex = 6, ;
		Top = 32, ;
		Width = 63
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSearch' AS basecommandbutton WITH ;
		Caption = "\<Search", ;
		Default = .T., ;
		Height = 23, ;
		Left = 359, ;
		Name = "cmdSearch", ;
		nanchor = 8, ;
		TabIndex = 5, ;
		Top = 6, ;
		Width = 63
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntClass' AS basecontainer WITH ;
		BorderWidth = 1, ;
		Height = 57, ;
		Left = 0, ;
		Name = "cntClass", ;
		nanchor = 10, ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 350
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="container" />

	ADD OBJECT 'cntClass.cboBaseClass' AS basecombobox WITH ;
		DisplayCount = 20, ;
		Format = "", ;
		Height = 21, ;
		Left = 76, ;
		MaxLength = 254, ;
		Name = "cboBaseClass", ;
		nanchor = 10, ;
		TabIndex = 4, ;
		Top = 32, ;
		Width = 175
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntClass.cboClassLookFor' AS basecombobox WITH ;
		DisplayCount = 10, ;
		Format = "", ;
		Height = 21, ;
		Left = 76, ;
		MaxLength = 254, ;
		Name = "cboClassLookFor", ;
		nanchor = 10, ;
		Style = 0, ;
		TabIndex = 2, ;
		Top = 6, ;
		Width = 175
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntClass.chkExactMatch1' AS basecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Exact match", ;
		ControlSource = "thisform.lclassexactmatch", ;
		Height = 16, ;
		Left = 265, ;
		Name = "chkExactMatch1", ;
		nanchor = 8, ;
		TabIndex = 5, ;
		Top = 8, ;
		Width = 77
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntClass.lblBaseClass' AS baselabel WITH ;
		Caption = "Base class:", ;
		Height = 16, ;
		Left = 12, ;
		Name = "lblBaseClass", ;
		TabIndex = 3, ;
		Top = 36, ;
		Width = 59
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'cntClass.lblClass' AS baselabel WITH ;
		Caption = "Class:", ;
		Height = 16, ;
		Left = 12, ;
		Name = "lblClass", ;
		TabIndex = 1, ;
		Top = 10, ;
		Width = 32
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'cntSearch' AS basecontainer WITH ;
		BorderWidth = 1, ;
		Height = 103, ;
		Left = 0, ;
		Name = "cntSearch", ;
		nanchor = 10, ;
		TabIndex = 2, ;
		Top = 55, ;
		Width = 350
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="container" />

	ADD OBJECT 'cntSearch.cboFolder' AS basecombobox WITH ;
		DisplayCount = 10, ;
		Format = "", ;
		Height = 21, ;
		Left = 76, ;
		MaxLength = 254, ;
		Name = "cboFolder", ;
		nanchor = 10, ;
		Style = 0, ;
		TabIndex = 7, ;
		Top = 56, ;
		Width = 240
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntSearch.cboLookFor' AS basecombobox WITH ;
		DisplayCount = 20, ;
		Format = "", ;
		Height = 21, ;
		Left = 76, ;
		MaxLength = 254, ;
		Name = "cboLookFor", ;
		nanchor = 10, ;
		Style = 0, ;
		TabIndex = 2, ;
		Top = 6, ;
		Width = 175
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntSearch.cboScope' AS basecombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		DisabledForeColor = 0,0,0, ;
		DisplayCount = 10, ;
		Format = "", ;
		Height = 21, ;
		Left = 76, ;
		MaxLength = 254, ;
		Name = "cboScope", ;
		nanchor = 10, ;
		Style = 0, ;
		TabIndex = 4, ;
		Top = 31, ;
		Width = 175
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntSearch.chkExactMatch2' AS basecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Exact match", ;
		ControlSource = "thisform.lfilenameexactmatch", ;
		Left = 265, ;
		Name = "chkExactMatch2", ;
		nanchor = 8, ;
		TabIndex = 5, ;
		Top = 8
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntSearch.chkProjectHomeDir' AS basecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Limit searc\<h to project home directory and subfolders", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkProjectHomeDir", ;
		TabIndex = 9, ;
		Top = 82, ;
		Visible = .F., ;
		Width = 275
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntSearch.chkSubFolders' AS basecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Searc\<h subfolders", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkSubFolders", ;
		TabIndex = 10, ;
		Top = 82, ;
		Width = 108
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntSearch.cmdCurrent' AS basecommandbutton WITH ;
		AutoSize = .F., ;
		Caption = "Current Folder", ;
		Height = 23, ;
		Left = 260, ;
		Name = "cmdCurrent", ;
		nanchor = 8, ;
		TabIndex = 11, ;
		ToolTipText = "Use Current Folder", ;
		Top = 79, ;
		Width = 86
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntSearch.cmdGetFolder' AS basecommandbutton WITH ;
		Caption = "...", ;
		Height = 21, ;
		Left = 324, ;
		Name = "cmdGetFolder", ;
		nanchor = 8, ;
		TabIndex = 8, ;
		Top = 56, ;
		Width = 22
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntSearch.lblLookFor' AS baselabel WITH ;
		Caption = "File Name:", ;
		Height = 16, ;
		Left = 12, ;
		Name = "lblLookFor", ;
		TabIndex = 1, ;
		Top = 10, ;
		Width = 51
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'cntSearch.lblLookIn' AS baselabel WITH ;
		Caption = "\<Look in:", ;
		Height = 16, ;
		Left = 12, ;
		Name = "lblLookIn", ;
		TabIndex = 6, ;
		Top = 60, ;
		Width = 39
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'cntSearch.lblScope' AS baselabel WITH ;
		Caption = "Sco\<pe:", ;
		Height = 16, ;
		Left = 12, ;
		Name = "lblScope", ;
		TabIndex = 3, ;
		Top = 35, ;
		Width = 36
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'cntTypes' AS basecontainer WITH ;
		BorderWidth = 1, ;
		Height = 64, ;
		Left = 0, ;
		Name = "cntTypes", ;
		nanchor = 10, ;
		TabIndex = 3, ;
		Top = 156, ;
		Width = 350
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="container" />

	ADD OBJECT 'cntTypes.Chkfiletype1' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "PRG", ;
		Left = 76, ;
		Name = "Chkfiletype1", ;
		TabIndex = 2, ;
		ToolTipText = "Program", ;
		Top = 8
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype10' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "H", ;
		Left = 176, ;
		Name = "Chkfiletype10", ;
		TabIndex = 8, ;
		ToolTipText = "Header (include)", ;
		Top = 8
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype11' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "TXT", ;
		Left = 176, ;
		Name = "Chkfiletype11", ;
		TabIndex = 10, ;
		Top = 44
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype12' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "QPR", ;
		Left = 226, ;
		Name = "Chkfiletype12", ;
		TabIndex = 12, ;
		ToolTipText = "Generated query program", ;
		Top = 26
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype13' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "VCX", ;
		Left = 26, ;
		Name = "Chkfiletype13", ;
		TabIndex = 3, ;
		ToolTipText = "Class Library", ;
		Top = 26
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype14' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "SCX", ;
		Left = 26, ;
		Name = "Chkfiletype14", ;
		TabIndex = 4, ;
		ToolTipText = "Form", ;
		Top = 44
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype2' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "PJX", ;
		Left = 76, ;
		Name = "Chkfiletype2", ;
		TabIndex = 3, ;
		ToolTipText = "Project", ;
		Top = 26
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype3' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "MNX", ;
		Left = 76, ;
		Name = "Chkfiletype3", ;
		TabIndex = 4, ;
		ToolTipText = "Menu", ;
		Top = 44
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype4' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "DBC", ;
		Left = 126, ;
		Name = "Chkfiletype4", ;
		TabIndex = 6, ;
		ToolTipText = "Database", ;
		Top = 26
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype5' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "LBX", ;
		Left = 126, ;
		Name = "Chkfiletype5", ;
		TabIndex = 7, ;
		ToolTipText = "Label", ;
		Top = 44
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype6' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "FRX", ;
		Left = 126, ;
		Name = "Chkfiletype6", ;
		TabIndex = 5, ;
		ToolTipText = "Report", ;
		Top = 8
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype7' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "SPR", ;
		Left = 226, ;
		Name = "Chkfiletype7", ;
		TabIndex = 13, ;
		ToolTipText = "Generates screen program", ;
		Top = 44
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype8' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "MPR", ;
		Left = 226, ;
		Name = "Chkfiletype8", ;
		TabIndex = 11, ;
		ToolTipText = "Generated menu program", ;
		Top = 8
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.Chkfiletype9' AS chkfiletype WITH ;
		Alignment = 0, ;
		Caption = "INI", ;
		Left = 176, ;
		Name = "Chkfiletype9", ;
		TabIndex = 9, ;
		Top = 26
		*< END OBJECT: ClassLib="editproperty.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntTypes.cmdClearAll' AS basecommandbutton WITH ;
		Caption = "Clear All", ;
		Height = 23, ;
		Left = 276, ;
		Name = "cmdClearAll", ;
		TabIndex = 15, ;
		Top = 35, ;
		Width = 63
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntTypes.cmdMarkAll' AS basecommandbutton WITH ;
		Caption = "Mark all", ;
		Height = 23, ;
		Left = 276, ;
		Name = "cmdMarkAll", ;
		TabIndex = 14, ;
		Top = 9, ;
		Width = 63
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntTypes.lblFileTypes' AS baselabel WITH ;
		Caption = "File Types:", ;
		Height = 16, ;
		Left = 8, ;
		Name = "lblFileTypes", ;
		TabIndex = 1, ;
		Top = 9, ;
		Width = 52, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'grdResults' AS basegrid WITH ;
		AllowAutoColumnFit = 2, ;
		ColumnCount = 7, ;
		Height = 59, ;
		Left = 6, ;
		MemberClass = "baseColumn", ;
		MemberClassLibrary = peme_basecontrols.prg, ;
		Name = "grdResults", ;
		nanchor = 15, ;
		RecordSource = "crsr_Results", ;
		TabIndex = 4, ;
		Top = 228, ;
		Width = 417, ;
		Basecolumn1.ControlSource = "Class", ;
		Basecolumn1.LCLASSESONLY = .T., ;
		Basecolumn1.Name = "colClass", ;
		Basecolumn1.Width = 100, ;
		Basecolumn2.ControlSource = "FileName", ;
		Basecolumn2.Name = "colFileName", ;
		Basecolumn2.Width = 150, ;
		Basecolumn3.ControlSource = "ThisForm.GetRelativePath (Folder, Thisform.cHomeDir)", ;
		Basecolumn3.Name = "colFolder", ;
		Basecolumn3.Width = 115, ;
		Basecolumn4.ControlSource = "Parent", ;
		Basecolumn4.LCLASSESONLY = .T., ;
		Basecolumn4.Name = "colParentClass", ;
		Basecolumn4.Width = 100, ;
		Basecolumn5.ControlSource = "ClassLoc", ;
		Basecolumn5.LCLASSESONLY = .T., ;
		Basecolumn5.Name = "colClassLoc", ;
		Basecolumn5.Width = 150, ;
		Basecolumn6.ControlSource = "BaseClass", ;
		Basecolumn6.LCLASSESONLY = .T., ;
		Basecolumn6.Name = "colBaseClass", ;
		Basecolumn6.Width = 100, ;
		Basecolumn7.ControlSource = "TimeStamp", ;
		Basecolumn7.Name = "ColTimeStamp", ;
		Basecolumn7.Width = 115
		*< END OBJECT: ClassLib="peme_basecontrols.vcx" BaseClass="grid" />

	ADD OBJECT 'grdResults.colBaseClass.Header1' AS header WITH ;
		Caption = "Base Class", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResults.colBaseClass.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResults.colClass.Header1' AS header WITH ;
		Caption = "Class", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResults.colClass.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResults.colClassLoc.Header1' AS header WITH ;
		Caption = "Class Location", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResults.colClassLoc.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResults.colFileName.Header1' AS header WITH ;
		Caption = "File Name", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResults.colFileName.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResults.colFolder.Header1' AS header WITH ;
		Caption = "Folder", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResults.colFolder.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResults.colParentClass.Header1' AS header WITH ;
		Caption = "Parent Class", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResults.colParentClass.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResults.ColTimeStamp.Header1' AS header WITH ;
		Caption = "TimeStamp", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResults.ColTimeStamp.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Activate
		DODEFAULT()
		
		Return
		
		IF THIS.lRequeryScope
			THIS.lRequeryScope = .F.
			THIS.LoadScope()
			THIS.UpdateScope()
		ENDIF
		
	ENDPROC

	PROCEDURE addfiletype
		Lparameters lcFileType, llValue, llFixLookFor
		
		With This
			.cFileTypes = Strtran (.cFileTypes, '|' + lcFileType + '|', '|')
			If llValue
				.cFileTypes = .cFileTypes + lcFileType + '|'
			Endif
		
			If llFixLookFor
				.UpdateLookFor()
			Endif
		Endwith
		
	ENDPROC

	PROCEDURE aligncontainers
		*** JRN 03/24/2010 : show only required containers
		Lparameters lcType
		Local nClassAnchor, nSearchAnchor, nTypesAnchor, nGridAnchor
		
		With This
			nClassAnchor 		= .cntClass.Anchor
			nSearchAnchor 	= .cntSearch.Anchor
			nTypesAnchor 		= .cntTypes.Anchor
			nGridAnchor 		= .grdResults.Anchor
		
			.cntClass.Anchor	= 0
			.cntSearch.Anchor	= 0
			.cntTypes.Anchor	= 0
			.grdResults.Anchor	= 0
		
			Do Case
				Case lcType = 'Class'
					.cntTypes.Visible = .F.
					.grdResults.Top = .cntSearch.Top + .cntSearch.Height + 6
				Case lcType = 'Form'
					.cntClass.Visible = .F.
					.cntSearch.Top = 0
					.cntTypes.Visible = .F.
					.grdResults.Top = .cntSearch.Top + .cntSearch.Height + 6
				Otherwise
					.cntClass.Visible = .F.
					.cntSearch.Top = 0
					.cntTypes.Top = .cntSearch.Top + .cntSearch.Height
					.grdResults.Top = .cntTypes.Top + .cntTypes.Height + 6
			Endcase
		
			.grdResults.Height = .Height - 6 - .grdResults.Top
		
			.cntClass.Anchor	= nClassAnchor
			.cntSearch.Anchor	= nSearchAnchor
			.cntTypes.Anchor	= nTypesAnchor
			.grdResults.Anchor	= nGridAnchor 
			
		Endwith
		
	ENDPROC

	PROCEDURE checkfiletype
		Lparameters lcFileType
		
		Return ('|' + lcFileType + '|') $ this.cFileTypes
	ENDPROC

	PROCEDURE Deactivate
		DODEFAULT()
		
		THIS.lRequeryScope = .T.
		
	ENDPROC

	PROCEDURE Destroy
		With This
			.cboFolder = .Null.
			.cboLookFor = .Null.
			.cboScope = .Null.
			.chkSubFolders = .Null.
			.chkProjectHomeDir = .Null.
		
			.cboClassLookFor = .Null.
			.cboBaseClass = .Null.
		Endwith
		
		DoDefault()
		
	ENDPROC

	PROCEDURE editsourcefile
		Lparameters lcFileName, lcClass
		
		EditSource (lcFileName, 0, Alltrim (lcClass))
		
	ENDPROC

	PROCEDURE Init
		Lparameters oFoxRef, lcType
		Local i
		Local nCnt
		Local nOffset
		Local cProjectPath
		Local lFound
		Local cFileType
		Local lFirstSearch
		Local cStartDir
		Local oSearch
		
		With This
		
			.cSearchType = lcType
			.AlignContainers(lcType) && must do this before default
		
			.MinHeight = .Height
			.MinWidth = .Width
		
			DoDefault()
		
			.Caption = ccLOC_Cap_Search_Caption
		
			.oFoxRef = oFoxRef
		
			.cboFolder 			= .cntSearch.cboFolder
			.cboLookFor 		= .cntSearch.cboLookFor
			.cboScope 			= .cntSearch.cboScope
			.chkSubFolders 		= .cntSearch.chkSubFolders
			.chkProjectHomeDir 	= .cntSearch.chkProjectHomeDir
		
			.cboClassLookFor 	= .cntClass.cboClassLookFor
			.cboBaseClass 		= .cntClass.cboBaseClass
		
			.chkSubFolders.Value     = .oFoxRef.SubFolders
			.chkProjectHomeDir.Value = .oFoxRef.ProjectHomeDir
		
			.cboLookFor.DisplayValue 		= .oFoxRef.Pattern
			.cboClassLookFor.DisplayValue 	= .oFoxRef.ClassSearch
			.cboBaseClass.DisplayValue 		= .oFoxRef.SearchBaseClass
		
			.lClassExactMatch  		= .oFoxRef.ClassExactMatch
			.lFileNameExactMatch	= .oFoxRef.FileNameExactMatch
		
			* -- Load Look For MRU
			.UpdateLookFor ()
		
		
			* -- Load Folder MRU
			* .cboFolder.AddItem(SYS(5) + CURDIR())
			nCnt = Alen(.oFoxRef.aFolderMRU, 1)
			For i = 1 To nCnt
				If !Empty(.oFoxRef.aFolderMRU[i])
					.cboFolder.AddItem(.oFoxRef.aFolderMRU[i])
				Endif
			Endfor
		
			.cFileTypes	= .oFoxRef.FileTypes
		
			.LoadScope(.oFoxRef.ProjectFile)
		
			If .oFoxRef.ProjectFile == PROJECT_GLOBAL Or Application.Projects.Count == 0 && OR .cboProject.ListCount == 0
				.cboScope.Value = SCOPE_FOLDER
				If .cboFolder.ListCount == 0
					m.cStartDir = Sys(5) + Curdir()
					.cboFolder.AddItem(Iif(Left(m.cStartDir, 1) == '\', '\', '') + m.cStartDir)
				Endif
			Else
				m.lFound = .F.
				cProjectPath = Addbs(Justpath(.oFoxRef.ProjectFile))
				For m.i = 1 To .cboFolder.ListCount
					If Upper(cProjectPath) == Upper(.cboFolder.List(m.i, 1))
						.cboFolder.ListIndex = m.i
						m.lFound = .T.
						Exit
					Endif
				Endfor
				If !m.lFound
					.cboFolder.AddItem(Iif(Left(m.cProjectPath, 1) == '\', '\', '') + cProjectPath)
				Endif
			Endif
		
			*** JRN 2010-03-26 : Get previous results
			Use (.oFoxRef.cResultsTable) In 0 Alias Results
			Select * 									;
				, Lower (FileName)		As SortFName	;
				From Results 							;
				where SearchType = This.cSearchType		;
				Order By Class, SortFName				;
				into Cursor crsr_Results Readwrite
			Use In Results
		
			.UpdateScope()
		
			.BindControls = .T.
			.Refresh()
		
		Endwith
		
	ENDPROC

	PROCEDURE loadscope
		* Abstract:
		*   Load up list of available scopes, including open Projects.
		*
		* Parameters:
		*	[cGotoProjName]
		#include "foxpro.h"
		#include "PEME_foxref.h"
		
		Lparameters cGotoProjName
		Local nProjectIndex
		Local nGotoIndex
		Local cFindScope
		Local cProjName
		
		With This.cntSearch.cboScope
			If Vartype(cGotoProjName) <> 'C' Or Empty(cGotoProjName)
				cFindScope = This.cboScope.Value
				cGotoProjName = .List(.ListIndex, 3)
			Else
				cFindScope = SCOPE_PROJECT
			Endif
			m.cGotoProjName = Lower(m.cGotoProjName)
		
			.Clear()
		
			m.nGotoIndex = 1
			For nProjectIndex = 1 To Application.Projects.Count
				m.cProjName = Lower(Application.Projects(nProjectIndex).Name)
				.AddItem("Entire project - " + Lower(Justfname(cProjName)))
				.AddListItem(SCOPE_PROJECT, .NewItemId, 2)
				.AddListItem(Iif(Left(m.cProjName, 1) == '\', '\', '') + m.cProjName, .NewItemId, 3)
				If m.cProjName == m.cGotoProjName And m.cFindScope == SCOPE_PROJECT
					m.nGotoIndex = .NewIndex
				Endif
			Endfor
		
			.AddItem(SCOPE_FOLDER_LOC)
			.AddListItem(SCOPE_FOLDER, .NewItemId, 2)
			.AddListItem('', .NewItemId, 3)
			If SCOPE_FOLDER == m.cFindScope
				m.nGotoIndex = .NewIndex
			Endif
		
			.ListIndex = m.nGotoIndex
		Endwith
		
	ENDPROC

	PROCEDURE search
		* Abstract:
		*   Perform the reference search based upon the options
		*	specified on the dialog.
		*
		* Parameters:
		*	none
		#include "foxpro.h"
		#include "PEME_foxref.h"
		
		Local cPattern, cScope, lSuccess, lUpdateGrid, nMouse
		
		cPattern = This.cboLookFor.DisplayValue
		cScope   = This.cboScope.Value
		
		If cScope == SCOPE_FOLDER And !Directory(This.cboFolder.DisplayValue)
			This.cboFolder.SetFocus()
			Messagebox(FOLDERNOEXIST_LOC, MB_ICONEXCLAMATION, This.Caption)
			Return .F.
		Endif
		
		nMouse = Thisform.MousePointer
		Thisform.MousePointer = MOUSE_HOURGLASS
		
		lSuccess = .F.
		With This.oFoxRef
			.Pattern        	= Alltrim (cPattern)
			.SubFolders      	= This.chkSubFolders.Value
			.ProjectHomeDir  	= This.chkProjectHomeDir.Value
			.FileTypes      	= This.cFileTypes
			.ProjectFile    	= ''
			.FileDirectory  	= ''
			.SearchType			= This.cSearchType
			.FileNameExactMatch = This.lFileNameExactMatch
			.ClassSearch 		= This.cboClassLookFor.DisplayValue
			.ClassExactMatch 	= This.lClassExactMatch
			.SearchBaseClass 	= This.cboBaseClass.DisplayValue	
		
			Do Case
		
				Case cScope == SCOPE_PROJECT And This.cboLookFor.ListIndex # 0 And This.cSearchType # 'Class'
					This.EditSourceFile (This.cboLookFor.List(This.cboLookFor.ListIndex, 2), '')
					lAllDone = .T.
		
				Case cScope == SCOPE_PROJECT
					.ProjectFile = This.cboScope.List(This.cboScope.ListIndex, 3)
					lSuccess = .Search(cPattern)
					lAllDone = .F.
		
				Case cScope == SCOPE_FOLDER
					.ProjectFile   = PROJECT_GLOBAL
					.FileDirectory = This.cboFolder.DisplayValue
					ThisForm.cHomeDir = .FileDirectory
					lSuccess = .Search(cPattern)
					lAllDone = .F.
		
			Endcase
		
			.SavePrefs()
		Endwith
		
		Thisform.MousePointer = nMouse
		
		
		If lAllDone
			Return .T.
		Else
			*** JRN 2010-03-26 : get our results
			Use (This.oFoxRef.cResultsTable) In 0 Alias Results
			Select * 									;
				, Lower (FileName)		as SortFName	;
				From Results 							;
				where SearchType = This.cSearchType		;
				Order by Class, SortFName				;
				into Cursor crsr_Temp Readwrite
			Use In Results
		
			*** JRN 2010-03-26 : Stuff 'em back into our grid's recordsource
			Select crsr_Results
			Delete Tag All
			Set Filter To
			Zap
			Append From (Dbf("crsr_Temp"))
			Goto top
			
			This.Refresh()
		
			Return .F.
		Endif
		
	ENDPROC

	PROCEDURE setallfiletypes
		Lparameters llFlag
		
		With This.cntTypes 
			For lnI = 1 To .ControlCount
				loControl = .Controls(lnI)
				If 'checkbox' = Lower(loControl.BaseClass)
					Thisform.AddFiletype(loControl.Caption, llFlag, .F.)
				Endif
			EndFor
			.UpdateLookFor()
			.Refresh()
		Endwith
		
	ENDPROC

	PROCEDURE updatelookfor
		* -- Load Look For MRU
		Local aFileList[1], cExt, cFile, cFilename, cHomeDir, cScope, lcMyExtension, lcProjectFile, lnFileCount
		Local lnI, nCnt, oFileRef, oProjectRef
		
		With This
		
			.cboLookFor.Clear()
			cScope = .cboScope.Value
		
			If cScope == SCOPE_PROJECT
		
				Do Case
					Case This.cSearchType = 'Class'
						cFileTypes = '|VCX|'
					Case This.cSearchType = 'Form'
						cFileTypes = '|SCX|'
					Otherwise
						cFileTypes = This.cFileTypes
						If 1 >= Len (cFileTypes)
							cFileTypes = '|'
						Endif
				Endcase
		
				lnFileCount = 0
				lcProjectFile = Upper(.cboScope.List(This.cboScope.ListIndex, 3))
		
				For Each oProjectRef In Application.Projects
					If Upper(oProjectRef.Name) == lcProjectFile
						cHomeDir = Addbs(Upper(oProjectRef.HomeDir))
						.cHomeDir = cHomeDir
		
						* now process each file in the project that matches our filetypes
						For Each oFileRef In oProjectRef.Files
							If (!.chkProjectHomeDir.Value Or Addbs(Upper(Justpath(oFileRef.Name))) = cHomeDir)
								cFilename = Upper(oFileRef.Name)
								cFile = Juststem (cFilename)
								cExt  = Justext (cFilename)
								If (1 = Len (cFileTypes) Or ('|' + cExt + '|') $ cFileTypes)
									lnFileCount = lnFileCount + 1
									Dimension aFileList (lnFileCount, 2)
									aFileList (lnFileCount, 1) = Lower (cFilename)
									aFileList (lnFileCount, 2) = Lower (Justfname (cFilename))
								Endif
							Endif
						Endfor
		
						If lnFileCount > 0
		
							Asort (aFileList, 2, -1, 0)
		
							With .cboLookFor
								For lnI = 1 To lnFileCount
									lcFileName = Lower(aFileList(lnI,1))
									lcFileDisplayName = Thisform.GetRelativePath (lcFileName, cHomeDir)
									lcFName = Justfname (lcFileDisplayName)
									lcQuote = Iif (" " $ lcFName, ['], '')
									If Justfname (lcFileDisplayName) == lcFileDisplayName
										lcFileDisplayName = JustStem (lcFileName)
									Else
										lcFileDisplayName = JustStem (lcFileName) + "  from  " + Justpath (lcFileDisplayName)
									Endif
		
									.AddItem (lcFileDisplayName)
									.AddListItem (lcFileName, .NewItemId, 2)
								Endfor
							Endwith
		
						Endif
		
					Endif
				Endfor
		
			Else
		
				.cboLookFor.Clear()
				nCnt = Alen(.oFoxRef.aLookForMRU, 1)
				For lnI = 1 To nCnt
					If .oFoxRef.aLookForMRU[lnI] # '?'
						.cboLookFor.AddItem(.oFoxRef.aLookForMRU[lnI])
					Endif
				Endfor
			Endif
		
		Endwith
		
		
	ENDPROC

	PROCEDURE updatescope
		* Abstract:
		*   Called when the Scope combo changes
		*
		* Parameters:
		*	None
		#include "foxpro.h"
		#include "PEME_foxref.h"
		Local cScope
		
		With This.cntSearch
		
			cScope = This.cboScope.Value
		
			.cboFolder.Enabled         = (cScope == SCOPE_FOLDER)
			.cmdGetFolder.Enabled      = (cScope == SCOPE_FOLDER)
		
			*!*	.cboFolder.Visible    = (cScope == SCOPE_FOLDER)
			*!*	.cmdGetFolder.Visible = (cScope == SCOPE_FOLDER)
			*!*	.lblLookIn.Visible    = (cScope == SCOPE_FOLDER)
			If cScope == SCOPE_PROJECT
				.cboFolder.DisplayValue = ''
			Endif
		
			.chkSubFolders.Visible     = (cScope == SCOPE_FOLDER)
			.chkProjectHomeDir.Visible = (cScope == SCOPE_PROJECT)
			.cmdCurrent.Visible        = (cScope == SCOPE_FOLDER)
		
			If .cboFolder.Enabled And Empty(.cboFolder.DisplayValue)
				.cboFolder.ListIndex = 1
			Endif
		
		EndWith
		
		This.UpdateLookFor()
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE cmdCancel.Init
		This.Caption = ccLOC_Cap_Search_Cancel
		DoDefault()
	ENDPROC

	PROCEDURE cmdSearch.Click
		IF THISFORM.Search()
			THISFORM.Release()
		ENDIF
		
		
	ENDPROC

	PROCEDURE cmdSearch.Init
		This.Caption = ccLOC_Cap_Search_Search
		DoDefault()
	ENDPROC

	PROCEDURE cntClass.cboBaseClass.Init
		Local laBaseClasses[1], lcBaseClass, lcBaseClasses, lnCount
		With This
			.AddItem('<All>')
		
			TEXT TO lcBaseClasses 	 NOSHOW TEXTMERGE pretext 15
			CheckBox
			Collection
			Column
			ComboBox
			CommandButton
			CommandGroup
			Container
			Control
			Cursor
			CursorAdapter
			Custom
			DataEnvironment
			EditBox
			Exception
			Form
			FormSet
			Grid
			Header
			Hyperlink
			Image
			Label
			Line
			ListBox
			OLE Bound
			OLE Container
			OptionButton
			OptionGroup
			Page
			PageFrame
			ProjectHook
			Relation
			ReportListener
			Separator
			Session Object
			Shape
			Spinner
			TextBox
			Timer
			ToolBar
			XMLAdapter
			XMLField
			XMLTable
			ENDTEXT
		
			lnCount = Alines (laBaseClasses, lcbaseclasses, 5, ' ')
			For Each lcBaseClass In laBaseClasses
				.AddItem(lcBaseClass)
			Endfor
		
		Endwith
		
	ENDPROC

	PROCEDURE cntClass.chkExactMatch1.Init
		This.Caption = ccLOC_Cap_Search_ExactMatch1
		DoDefault()
	ENDPROC

	PROCEDURE cntClass.lblBaseClass.Init
		This.Caption = ccLOC_Cap_Search_BaseClass
	ENDPROC

	PROCEDURE cntClass.lblClass.Init
		This.Caption = ccLOC_Cap_Search_Class
	ENDPROC

	PROCEDURE cntSearch.cboScope.GotFocus
		DODEFAULT()
		
		ThisForm.lRequeryScope = .F.
		ThisForm.LoadScope()
		ThisForm.UpdateScope()
		
	ENDPROC

	PROCEDURE cntSearch.cboScope.InteractiveChange
		ThisForm.UpdateScope()
	ENDPROC

	PROCEDURE cntSearch.cboScope.MouseDown
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF ThisForm.lRequeryScope
			ThisForm.lRequeryScope = .F.
			ThisForm.LoadScope()
			ThisForm.UpdateScope()
		ENDIF
		
	ENDPROC

	PROCEDURE cntSearch.chkExactMatch2.Init
		This.Caption = ccLOC_Cap_Search_ExactMatch2
		DoDefault()
	ENDPROC

	PROCEDURE cntSearch.chkProjectHomeDir.Init
		This.Caption = ccLOC_Cap_Search_LimitSearch
	ENDPROC

	PROCEDURE cntSearch.chkProjectHomeDir.InteractiveChange
		ThisForm.UpdateScope()
	ENDPROC

	PROCEDURE cntSearch.chkSubFolders.Init
		This.Caption = ccLOC_Cap_Search_SubFolders
	ENDPROC

	PROCEDURE cntSearch.cmdCurrent.Click
		With This.Parent.cboFolder 
			.DisplayValue = Sys(5) + Curdir()
		EndWith 
		
		
	ENDPROC

	PROCEDURE cntSearch.cmdCurrent.Init
		This.Caption = ccLOC_Cap_Search_CurrentFolder
		DoDefault()
	ENDPROC

	PROCEDURE cntSearch.cmdGetFolder.Click
		Local cFolder
		
		cFolder = Getdir(Thisform.cboFolder.DisplayValue, '', '', 64 + 1)
		If !Empty(cFolder)
			With This.Parent.cboFolder
				.DisplayValue = cFolder
			Endwith
		EndIf
		
		 
	ENDPROC

	PROCEDURE cntSearch.lblLookFor.Init
		This.Caption = ccLOC_Cap_Search_FileName
	ENDPROC

	PROCEDURE cntSearch.lblLookIn.Init
		This.Caption = ccLOC_Cap_Search_LookIn
	ENDPROC

	PROCEDURE cntSearch.lblScope.Init
		This.Caption = ccLOC_Cap_Search_Scope
	ENDPROC

	PROCEDURE cntTypes.cmdClearAll.Click
		With Thisform
			.SetAllFileTypes(.F.)
		Endwith
		
	ENDPROC

	PROCEDURE cntTypes.cmdClearAll.Init
		This.Caption = ccLOC_Cap_Search_ClearAll
	ENDPROC

	PROCEDURE cntTypes.cmdMarkAll.Click
		With Thisform
			.SetAllFileTypes(.T.)
		Endwith
		
	ENDPROC

	PROCEDURE cntTypes.cmdMarkAll.Init
		This.Caption = ccLOC_Cap_Search_MarkAll
	ENDPROC

	PROCEDURE cntTypes.lblFileTypes.Init
		This.Caption = ccLOC_Cap_Search_FileTypes
	ENDPROC

	PROCEDURE grdResults.MouseUp
		Lparameters nButton, nShift, nXCoord, nYCoord
		
		Local nXCoord_In, nYCoord_In, nWhere_Out , nRelRow_Out , nRelCol_Out , nView_Out
		
		If nButton = 1
		
			nXCoord_In = Mcol(Wontop(),3)
			nYCoord_In = Mrow(Wontop(),3)
			Store 0 To nWhere_Out , nRelRow_Out , nRelCol_Out , nView_Out
			This.GridHitTest(nXCoord_In, nYCoord_In, @nWhere_Out, @nRelRow_Out, @nRelCol_Out)
		
			If nWhere_Out = 3
				Thisform.EditSourceFile (FullName, Class)
				Thisform.Release()
			Endif
		
		Endif
		
	ENDPROC

	PROCEDURE grdResults.Refresh
		Local loColumn As Object
		Local lnI
		
		With This
			* which ones are visible?
			For lnI = 1 To .ColumnCount
				loColumn = .Columns(lnI)
				With loColumn
					If Thisform.cSearchType # 'Class' And .lClassesOnly
						.Visible = .F.
					Endif
				Endwith
			Endfor
		
			If Inlist (Thisform.cSearchType, 'Class', 'Form')
				.ColFileName.ControlSource = [JustStem (FileName)]
			Endif
		
			.ColFolder.ControlSource = [JustPath (ThisForm.GetRelativePath (FullName, '] + Thisform.cHomeDir + ['))]
		
		Endwith
		
		
		
	ENDPROC

ENDDEFINE
